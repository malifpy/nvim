!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/malifpy/.config/nvim/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
Dependencies	README.md	/^## Dependencies$/;"	s	chapter:Neovim Configuration
Neovim Configuration	README.md	/^# Neovim Configuration$/;"	c
['<S-Tab>']	lua/plugins/nvim_cmp.lua	/^    ['<S-Tab>'] = function(fallback)$/;"	f
['<Tab>']	lua/plugins/nvim_cmp.lua	/^    ['<Tab>'] = function(fallback)$/;"	f
['[M']	lua/plugins/nvim_treesitter.lua	/^        ['[M'] = '@function.outer',$/;"	f
['[m']	lua/plugins/nvim_treesitter.lua	/^        ['[m'] = '@function.outer',$/;"	f
[']M']	lua/plugins/nvim_treesitter.lua	/^        [']M'] = '@function.outer',$/;"	f
[']m']	lua/plugins/nvim_treesitter.lua	/^        [']m'] = '@function.outer',$/;"	f
['af']	lua/plugins/nvim_treesitter.lua	/^        ['af'] = '@function.outer',$/;"	f
['if']	lua/plugins/nvim_treesitter.lua	/^        ['if'] = '@function.inner',$/;"	f
config	lua/pluginList.lua	/^        config = function() require 'plugins\/lualine' end$/;"	f
config	lua/pluginList.lua	/^        config = function() require 'plugins\/nvim_cmp' end$/;"	f
config	lua/pluginList.lua	/^        config = function() require 'plugins\/nvim_lsp' end$/;"	f
config	lua/pluginList.lua	/^        config = function() require 'plugins\/nvim_treesitter' end$/;"	f
config	lua/pluginList.lua	/^        config = function() require'plugins\/nvim_tree' end$/;"	f
config	vscode.lua	/^        config = function() $/;"	f
config	vscode.lua	/^        config = function()$/;"	f
error_msg	plugin/packer_compiled.lua	/^local no_errors, error_msg = pcall(function()$/;"	f
expand	lua/plugins/nvim_cmp.lua	/^    expand = function(args)$/;"	f
on_attach	lua/plugins/nvim_lsp.lua	/^local on_attach = function(_, bufnr)$/;"	f
save_profiles	plugin/packer_compiled.lua	/^local function save_profiles(threshold)$/;"	f
time	plugin/packer_compiled.lua	/^    time = function(chunk, start) end$/;"	f
time	plugin/packer_compiled.lua	/^    time = function(chunk, start)$/;"	f
try_loadstring	plugin/packer_compiled.lua	/^local function try_loadstring(s, component, name)$/;"	f
